import "reflect-metadata"
import connection from "../../src/database";

import { CreateUserService } from "../../src/App/services/CreateUserService"

describe('Create user', () => {
    beforeAll(async () => {
        await connection.create();
    });

    afterAll(async () => {
        await connection.close();
    });

    beforeEach(async () => {
        await connection.clear();
    });

    it('should sum two numbers', () => {

        const x = 2
        const y = 3
        const sum = x + y

        expect(sum).toBe(5)
    })


    it('create non admin user', async () => {

        const createUserService = new CreateUserService

        const mockData = { name: 'galdo', email: 'testeeee', message: 'num tem' }

        let user: any = {name: 'ta leve', message: 'num tem'}


        // try {
        //     user = await createUserService.execute(mockData)
        // } catch (error) {
            
        // }

        
        await createUserService.execute(mockData)
            .then(res => {

                user = res
                console.log("funcionou", user)
            })
            .catch(err => {
                console.log("fodeu", user)
                user = { message: err.message }
            })


        expect(user.name).toBe(mockData.name)
        // expect(user.message).toBe(mockData.message)
    })


    // test('testing environment', () => {

    //     expect(process.env.NODE_ENV, 'test')
    // })

    // test('aaa', () => {
    //     const x = 2
    //     const y = 3
    //     const sum = x + y

    //     expect(sum).toBe(5)
    // })
})